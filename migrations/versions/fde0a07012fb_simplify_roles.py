"""simplify roles

Revision ID: fde0a07012fb
Revises: b1d25db65c20
Create Date: 2020-05-21 17:01:07.887247

"""
from alembic import op
import sqlalchemy as sa

from app.helpers import Role

# revision identifiers, used by Alembic.
revision = 'fde0a07012fb'
down_revision = 'b1d25db65c20'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index('ix_roles_name')

    op.drop_table('roles')
    op.drop_table('user_role_assoc')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.Integer(), nullable=True))

    op.execute("UPDATE users SET role = {0}".format(Role.User.value))
    op.execute("UPDATE users SET role = {0} WHERE id = 1".format(Role.Admin.value))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('role')

    op.create_table('user_role_assoc',
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=True),
    sa.Column('description', sa.VARCHAR(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index('ix_roles_name', ['name'], unique=1)

    # ### end Alembic commands ###
